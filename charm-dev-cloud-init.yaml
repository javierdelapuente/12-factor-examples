#cloud-config
---

package_update: true

packages:
- python3-pip
- jq
- tox
- gnome-keyring
- sshfs

snap:
  commands:
  - snap install lxd
  - snap install microk8s --channel 1.31-strict/stable
  - snap alias microk8s.kubectl kubectl
  - snap install --classic charmcraft
  - snap install --classic rockcraft
  - snap install jhack --channel=latest/stable
  - snap install juju --channel=3.6/stable
  - snap refresh

runcmd:
  
- |
  # disable swap
  sysctl -w vm.swappiness=0
  echo "vm.swappiness = 0" | tee -a /etc/sysctl.conf
  swapoff -a


- |
  # disable unnecessary services
  systemctl disable man-db.timer man-db.service --now
  systemctl disable apport.service apport-autoreport.service  --now
  systemctl disable apt-daily.service apt-daily.timer --now
  systemctl disable apt-daily-upgrade.service apt-daily-upgrade.timer --now
  systemctl disable unattended-upgrades.service --now
  systemctl disable motd-news.service motd-news.timer --now
  systemctl disable bluetooth.target --now
  systemctl disable ua-messaging.service ua-messaging.timer --now
  systemctl disable ua-timer.timer ua-timer.service --now
  systemctl disable systemd-tmpfiles-clean.timer --now


  # Disable IPv6
  echo "net.ipv6.conf.all.disable_ipv6=1" | tee -a /etc/sysctl.conf
  echo "net.ipv6.conf.default.disable_ipv6=1" | tee -a /etc/sysctl.conf
  echo "net.ipv6.conf.lo.disable_ipv6=1" | tee -a /etc/sysctl.conf
  sysctl -p

- |
  lxd init --auto
  adduser ubuntu lxd
  snap connect jhack:dot-local-share-juju snapd
  usermod -a -G lxd,snap_microk8s ubuntu

- |
  # setup microk8s and bootstrap
  sudo -u ubuntu bash <<'EOF'
    set -x

    # Make sure juju directory is there
    mkdir -p /home/ubuntu/.local/share/juju
  
    mkdir -p /home/ubuntu/.kube
    microk8s status --wait-ready

    sudo microk8s enable dns
    sudo microk8s.enable registry
    sudo microk8s.enable ingress
    sudo microk8s.enable hostpath-storage

    IPADDR=$(ip -4 -j route get 2.2.2.2 | jq -r '.[] | .prefsrc')
    sudo microk8s enable metallb:$IPADDR-$IPADDR

    microk8s kubectl rollout status deployments/hostpath-provisioner -n kube-system -w
    microk8s kubectl rollout status deployments/coredns -n kube-system -w
    microk8s kubectl rollout status daemonset.apps/speaker -n metallb-system -w
    microk8s kubectl rollout status daemonsets/nginx-ingress-microk8s-controller -n ingress -w

    juju bootstrap microk8s dev-controller

    microk8s config | sudo -u ubuntu tee /home/ubuntu/.kube/config > /dev/null
  EOF


final_message: "The system is finally up, after $UPTIME seconds"
